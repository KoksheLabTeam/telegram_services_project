"""Initial migration

Revision ID: 37389e4021bb
Revises: e7b41c745641
Create Date: 2025-03-01 14:23:32.366717

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "37389e4021bb"
down_revision: Union[str, None] = "e7b41c745641"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_categories_id"), "categories", ["id"], unique=False
    )
    op.create_table(
        "cities",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_cities_id"), "cities", ["id"], unique=False)
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("customer_id", sa.Integer(), nullable=False),
        sa.Column("executor_id", sa.Integer(), nullable=True),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "CANCELLED",
                name="orderstatus",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["executor_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_orders_id"), "orders", ["id"], unique=False)
    op.create_table(
        "user_categories",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "category_id"),
    )
    op.create_table(
        "offers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("executor_id", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("estimated_time", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "ACCEPTED", "REJECTED", name="offerstatus"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["executor_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_offers_id"), "offers", ["id"], unique=False)
    op.create_table(
        "reviews",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["target_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reviews_id"), "reviews", ["id"], unique=False)
    op.add_column(
        "users", sa.Column("telegram_id", sa.Integer(), nullable=False)
    )
    op.add_column("users", sa.Column("name", sa.String(), nullable=False))
    op.add_column(
        "users", sa.Column("is_customer", sa.Boolean(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("is_executor", sa.Boolean(), nullable=False)
    )
    op.add_column("users", sa.Column("is_admin", sa.Boolean(), nullable=False))
    op.add_column("users", sa.Column("city_id", sa.Integer(), nullable=False))
    op.add_column(
        "users",
        sa.Column("rating", sa.Numeric(precision=2, scale=1), nullable=False),
    )
    op.add_column(
        "users", sa.Column("completed_orders", sa.Integer(), nullable=False)
    )
    op.alter_column(
        "users", "username", existing_type=sa.VARCHAR(), nullable=True
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_unique_constraint(None, "users", ["telegram_id"])
    op.create_foreign_key(
        None, "users", "cities", ["city_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("users", "middle_name")
    op.drop_column("users", "is_active")
    op.drop_column("users", "first_name")
    op.drop_column("users", "is_staff")
    op.drop_column("users", "is_superuser")
    op.drop_column("users", "password")
    op.drop_column("users", "last_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "last_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "password", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "is_staff", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "first_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "middle_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "users", type_="foreignkey")
    op.drop_constraint(None, "users", type_="unique")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.alter_column(
        "users", "username", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_column("users", "completed_orders")
    op.drop_column("users", "rating")
    op.drop_column("users", "city_id")
    op.drop_column("users", "is_admin")
    op.drop_column("users", "is_executor")
    op.drop_column("users", "is_customer")
    op.drop_column("users", "name")
    op.drop_column("users", "telegram_id")
    op.drop_index(op.f("ix_reviews_id"), table_name="reviews")
    op.drop_table("reviews")
    op.drop_index(op.f("ix_offers_id"), table_name="offers")
    op.drop_table("offers")
    op.drop_table("user_categories")
    op.drop_index(op.f("ix_orders_id"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_cities_id"), table_name="cities")
    op.drop_table("cities")
    op.drop_index(op.f("ix_categories_id"), table_name="categories")
    op.drop_table("categories")
    # ### end Alembic commands ###
